Lab: DOM-based cookie manipulation

This lab demonstrates DOM-based client-side cookie manipulation. To solve this lab, inject a cookie that will cause XSS on a different 
page and call the print() function. 
You will need to use the exploit server to direct the victim to the correct pages.


The webpage contained this script:
                       <script>
                            document.cookie = 'lastViewedProduct=' + window.location + '; SameSite=None; Secure'
                        </script>

this uses window.location and allows for user controllable input




payload used in exploit server:
<iframe src="https://0a430060045454e780babc0900d4007c.web-security-academy.net/product?productId=1&'><script>print()</script>" onload="if(!window.x)this.src='https://0a430060045454e780babc0900d4007c.web-security-academy.net';window.x=1;">



explination:
The original source of the iframe matches the URL of one of the product pages, except there is a JavaScript payload added to the end. 
When the iframe loads for the first time, the browser temporarily opens the malicious URL, which is then saved as the value of the 
lastViewedProduct cookie. The onload event handler ensures that the victim is then immediately redirected to the home page, 
unaware that this manipulation ever took place. While the victim's browser has the poisoned cookie saved, loading the home page will 
cause the payload to execute.